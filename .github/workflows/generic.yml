# Controls when the action will run.
name: Build PHPBU Docker 
on:
  push:
    tags:
      - 'v*'
  pull_request:

jobs:
  lint:
    name: Lint Dockerfile
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: lint
        uses: brpaz/hadolint-action@v1.2.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          dockerfile: Dockerfile

  build:
    name: Build Container Images
    runs-on: ubuntu-18.04
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Uses QEMU
        uses: docker/setup-qemu-action@v1
        with:
            platforms: all

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ secrets.DOCKERHUB_ORGANIZATION }}/phpbu
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}

      - name: BuildX - Supports remote-cache, secrets, etc...
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
              ${{ runner.os }}-buildx-

      - name: Login DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./
          file: Dockerfile
          platforms: linux/amd64, linux/arm64, linux/arm/v6
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Digest
        run: echo ${{ steps.docker_build.outputs.digest }}
